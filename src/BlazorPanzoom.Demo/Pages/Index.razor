@page "/"

<Demo Title="Panning and zooming">
    <div class="buttons">
        <button @onclick="OnZoomInClick">Zoom in</button>
        <button @onclick="OnZoomOutClick">Zoom out</button>
        <input type="range" min="0.1" max="4" step="0.1" default-value="1" @bind-value="RangeValue" @bind-value:event="oninput"/>
    </div>

    <div class="panzoom-parent" style="width: 400px; border: 2px dotted;">
        <Panzoom @ref="_panzoom">
            <div @ref="@context.ElementReference" class="panzoom-content">
                <img style="width: 100%; height: 100%" src="awesome_tiger.svg" alt="image"/>
            </div>
        </Panzoom>
    </div>

</Demo>

@code {

    private double _rangeValue;

    private double RangeValue
    {
        get => _rangeValue;
        set
        {
            _rangeValue = value;
            _panzoom.ZoomAsync(value);
        }
    }

    private Panzoom _panzoom;

    private async Task OnZoomInClick(MouseEventArgs args)
    {
        await _panzoom.ZoomInAsync();
        await UpdateSlider();
    }

    private async Task OnZoomOutClick(MouseEventArgs args)
    {
    // await _panzoom.ZoomAsync();
    }

    private async Task OnSliderChange(ChangeEventArgs args)
    {
        Console.WriteLine(_rangeValue + " " + args.Value);
    }

    private async Task UpdateSlider()
    {
        var scale = await _panzoom.GetScaleAsync();
        _rangeValue = scale;
    }

}